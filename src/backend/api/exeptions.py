import logging

from fastapi import FastAPI, HTTPException, Request
from fastapi.exception_handlers import http_exception_handler


def register_exception_handlers(app: FastAPI):
    """
    Registers custom exception handlers for the FastAPI application.
    Args:
        app (FastAPI): The FastAPI application instance to register the exception handlers with.
    The function sets up a custom handler for HTTPException that logs the exception details
    and then delegates to the default HTTP exception handler.
    """

    logger = logging.getLogger(__name__)

    @app.exception_handler(HTTPException)
    async def custom_http_exception_handler(request: Request, exc: HTTPException):
        """
        Custom HTTP exception handler.
        Logs the HTTP error and delegates to the default HTTP exception handler.
        Args:
            request (Request): The incoming request.
            exc (HTTPException): The HTTP exception that was raised.
        Returns:
            Response: The response generated by the default HTTP exception handler.
        """

        logger.info("HTTP error: %s", exc)
        return await http_exception_handler(request, exc)
